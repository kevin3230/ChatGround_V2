--表格建好後執行下列sql
--#sys_role
insert into `sys_role` ( `id`, `cn_name`, `role`, `available`, `description`) values(1, 'admin', 'ROLE_ADMIN', 1 , null);
insert into `sys_role` (`id`, `cn_name`, `role`, `available`) values(2, 'user', 'ROLE_USER', 1);

--#sys_permission
insert into `sys_permission` (`id`, `available`, `name`, `parent_id`, `parent_ids`, `permission`, `resource_type`, `url`)
values(1, 1, '/chatground/ground', 0, null, 'ground', 'menu', '/chatground/ground');
--#sys_role_permission
insert into `sys_role_permission` (`role_id`, `permission_id`) values(1, 1);
insert into `sys_role_permission` (`role_id`, `permission_id`) values(2, 1);

--#member_sysrole  有利用testMemberRepository.testSave新增會員才執行這行
insert into `member_sysrole` (`mem_id`, `role_id`) values(1, 1);

-- 此script僅當參考用,使用spring.jpa.hibernate.ddl-auto=update 自動建立表格
DROP TABLE MESSAGE;
DROP TABLE MEMCRSET;
DROP TABLE CHATROOM;
DROP TABLE SYSTEM_NOTIFY;
DROP TABLE MEMBER;
DROP SEQUENCE SEQ_MEMCRSETNO;
DROP SEQUENCE SEQ_MEMNO;
DROP SEQUENCE SEQ_MSGNO;
DROP SEQUENCE SEQ_CRNO;
DROP SEQUENCE SEQ_SNNO;

create table MEMBER(
    MEM_NO CHAR(10) PRIMARY KEY NOT NULL,
    MEM_ACC VARCHAR2(20) NOT NULL,
    MEM_PW VARCHAR2(45) NOT NULL,
    MEM_NICKNAME VARCHAR2(10),
    MEM_EMAIL VARCHAR2(30) NOT NULL,
    MEM_BIRTH DATE,
    MEM_GENDER CHAR(1),
    MEM_REGDATE TIMESTAMP NOT NULL,
    MEM_STATUS NUMBER(1),
    MEM_SALT CHAR(20),
    MEM_AUTHORITY CHAR(5) NOT NULL,
    MEM_PIC BLOB
);

CREATE TABLE CHATROOM(
    CR_NO CHAR(20) NOT NULL PRIMARY KEY,
    CR_NICKNAME VARCHAR2(20) NOT NULL
);

CREATE TABLE MEMCRSET (
    MEMCRSET_NO CHAR(20) PRIMARY KEY NOT NULL,
    MEMCRSET_MEMNO CHAR(10) NOT NULL,
    MEMCRSET_CRNO CHAR(20) NOT NULL,
    CONSTRAINT FK_MEMCRSET_MEMNO_MEM_NO
    FOREIGN KEY(MEMCRSET_MEMNO) REFERENCES MEMBER(MEM_NO),
    CONSTRAINT FK_MEMCRSET_CRNO_CR_NO
    FOREIGN KEY(MEMCRSET_CRNO) REFERENCES CHATROOM(CR_NO)
);

CREATE TABLE MESSAGE (
    MSG_NO CHAR(20) PRIMARY KEY NOT NULL,
    MSG_FROM CHAR(10) NOT NULL,
    MSG_TIME TIMESTAMP NOT NULL,
    MSG_CONTENT VARCHAR2(500) NOT NULL,
    MSG_CRNO CHAR(20) NOT NULL,
    MSG_STATUS NUMBER(1),
    CONSTRAINT FK_MSG_FROM_MEM_NO
    FOREIGN KEY(MSG_FROM) REFERENCES MEMBER(MEM_NO),
    CONSTRAINT FK_MESSAGE_CHATROOM
    FOREIGN KEY(MSG_CRNO) REFERENCES CHATROOM(CR_NO)
);

CREATE TABLE SYSTEM_NOTICE(
    SN_NO CHAR(20) NOT NULL PRIMARY KEY,
    SN_CONTENT VARCHAR2(500) NOT NULL,
    SN_TIME TIMESTAMP NOT NULL
);

CREATE SEQUENCE SEQ_MEMNO
    MAXVALUE 999999999
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE SEQ_MSGNO
    MAXVALUE 9999999999999999999
    NOCYCLE
    NOCACHE;
    
CREATE SEQUENCE SEQ_CRNO
    MAXVALUE 9999999999999999999
    NOCYCLE
    NOCACHE;

CREATE SEQUENCE SEQ_SNNO
    MAXVALUE 999999999999999999
    NOCYCLE
    NOCACHE;
    
CREATE SEQUENCE SEQ_MEMCRSETNO
    MAXVALUE 999999999999999999
    NOCYCLE
    NOCACHE;
